Helper class to simplify starting a embedded Tomcat in the
development environment for a Maven webapplication project.

Add this dependecy to your project.

		<dependency>
			<groupId>ch.ralscha</groupId>
			<artifactId>embeddedtc</artifactId>
			<version>0.0.1</version>
			<scope>provided</scope>
		</dependency>
		
and start the embedded Tomcat with ch.ralscha.embeddedtc.EmbeddedTomcat.	
This starts a Tomcat on port 8080 with a context path "/" and a context directory
that points to current_dir + /src/main/webapp

If you need more control create a class in your project (e.g. StartTomcat) and
create an instance of EmbeddedTomcat, call the configure methods and start it
with start()

public class StartTomcat {
	public static void main(String[] args) throwsException {

		EmbeddedTomcat etc = new EmbeddedTomcat(9999);
		etc.setContextDirectory("/home/mywebapp");
		etc.setTempDirectoryName("tmp");
		etc.addContextEnvironmentString("key", "value");
		etc.start();
	}
}



CHANGELOG
=========

0.0.3   February 26, 2012
  * The start() method no longer blocks after starting Tomcat
  * Added a new method startAndWait() that blocks the program after starting Tomcat  
  * Added setSilent(boolean) method. If set to true it disables output messages.
  * Added new constructor EmbeddedTomcat(String contextPath). 
    Creates Tomcat with specified context path and port 8080  
    
0.0.2   February 25, 2012                 
  * Convert exceptions to RuntimeException
  * Starts by default a shutdown listener on the shutdown port (port + 1000)
  * Before starting a new Tomcat it tries to stop a previous one 
    by sending a command to the shutdown port.

0.0.1   February 24, 2012 
  * Initial version

   
		